Lab 04:

Zadanie1
 select * from postac where rodzaj='wiking' order by data_ur;
 delete from postac where id_postaci='4';
 delete from postac where id_postaci='5';
 
 alter table walizka drop foreign key walizka_ibfk_1;
 alter table przetwory drop foreign key przetwory_ibfk_1;
 alter table przetwory drop foreign key przetwory_ibfk_2;
 alter table postac modify id_postaci int;
 alter table postac drop primary key;

Zadanie2
 alter table postac add column pesel varchar(255) not null;
 update postac set pesel='12345678910'+id_postaci;
 alter table postac add primary key (pesel);
 alter table postac modify rodzaj enum ('kobieta','ptak','wiking','syrena');
 insert into postac values(8,'Gertruda Nieszczera','syrena','2000-06-07',20,default,default,12345678945);

Zadanie3
 update postac set statek='drakar' where rodzaj LIKE '%a%';
 update statek set max_ladownosc=max_ladownosc*0.7 where data_wodowania >= '2000-01-01' and data_wodowania <'2000-01-15';
 alter table postac add check (wiek<1000);

Zadanie 4
a)
	alter table postac modify rodzaj enum('kobieta','ptak','wiking','syrena','waz');
	insert into postac values(9,'Loko','waz','2010-03-08',10,NULL,default,NULL);
b)
	create table marynarz select * from postac;
	create table marynarz2 like postac;
	insert into marynarz2 select * from postac where statek!=null;

Zadanie 5
a)
	update postac set statek=null;
b)
	delete from postac where id_postaci=6 and rodzaj='wiking';
c)
	delete from statek;
d)
	drop table statek;
e)
	create table zwierz(
   	 -> id int auto_increment,
   	 -> nazwa varchar(100),
   	 -> wiek int,
    	 -> primary key(id));
f)
	insert into zwierz select id_postaci,nazwa,wiek from postac where rodzaj='ptak';
	insert into zwierz select id_postaci,nazwa,wiek from postac where rodzaj='waz';









Lab 05:
Zad1
1.
	create table Mkreatura  like wikingowie.kreatura;
	insert into Mkreatura select * from wikingowie.kreatura;

	create table Mzasob  like wikingowie.zasob;
	insert into Mzasob select * from wikingowie.zasob;

	create table Mekwipunek  like wikingowie.ekwipunek;
	insert into Mekwipunek select * from wikingowie.ekwipunek;

2.
	select * from zasob;
3.
	select * from zasob where rodzaj='jedzenie';
4.
	SELECT idZasobu, ilosc FROM ekwipunek WHERE idKreatury IN(1, 3, 5);

Zad2.
1.
	select * from Mkreatura where rodzaj!='wiedzma' and udzwig>=50;

2.
	select * from Mzasob where waga>=2 and waga<=5;

3.
	select * from Mkreatura where nazwa like '%or%' and udzwig between 30 and 70;

Zad3
1.
	select * from Mzasob where month(dataPozyskania) in (7,8);

2.
	select * from Mzasob where rodzaj!='' order by waga asc;

3.
	select * from Mkreatura order by dataUr asc limit 5;

Zad4
1.
	select distinct(rodzaj) from Mzasob;

2.
	select concat(nazwa, " - ", rodzaj) as kreatura from Mkreatura where rodzaj like 'wi%';
	
3.
	select ilosc*waga from Mzasob where dataPozyskania between '2000-01-01' and '2007-12-31';

Zad5
1.
	select nazwa,ilosc*waga*0.7 as 'masa wlasciwa', ilosc*waga*0.3 as 'odpady' from Mzasob where rodzaj='jedzenie';

2.
	select * from Mzasob where rodzaj is null;

3.
	select distinct rodzaj, nazwa from Mzasob where nazwa like 'Ba%' or nazwa like '%os' order by nazwa asc;









Lab06:
Zad1
1.
	select avg(waga) from Mkreatura where rodzaj='wiking';

2.
	select rodzaj,avg(waga),count(nazwa) from Mkreatura group by rodzaj;

3.
	select rodzaj,round(avg(year(now())-year(dataUr)),0) as 'sredni_wiek' from Mkreatura group by rodzaj;



Zad2
1.
	select rodzaj, sum(waga*ilosc) from Mzasob group by rodzaj;

2.
	select nazwa, avg(waga) from Mzasob group by nazwa having avg(waga)>10 and sum(ilosc)>=4;

3.
	select rodzaj,count(distinct(nazwa)) from Mzasob group by rodzaj having sum(ilosc)>1;

Zad3
1.
	select k.nazwa, k.idKreatury, e.idKreatury, e.idZasobu, e.ilosc from Mkreatura as k, Mekwipunek e where k.idKreatury=e.idKreatury;
	/
	select k.nazwa, k.idKreatury, e.idKreatury, e.idZasobu, e.ilosc from Mkreatura as k inner join Mekwipunek e on  k.idKreatury=e.idKreatury;
	/
	select k.nazwa,sum(e.ilosc) from Mkreatura as k inner join Mekwipunek e on k.idKreatury=e.idKreatury group by
	k.nazwa;

2.
	select k.idKreatury,k.nazwa,z.nazwa from Mkreatura k, Mekwipunek e, Mzasob z where k.idKreatury=e.idKreatury and e.idZasobu=z.idZasobu;
	
3.
	select * from Mkreatura k left join Mekwipunek e on k.idKreatury=e.idKreatury where e.idKreatury is null;
	/
	select idKreatury from Mkreatura where idKreatury not in (select idKreatury from Mekwipunek where idKreatury is not null);


Zad4
1.
	select k.nazwa,z.nazwa from Mkreatura k, Mekwipunek e, Mzasob z where k.idKreatury=e.idKreatury and e.idZasobu=z.idZasobu  and year(dataUr) between 1670 and 1679 and k.rodzaj='wiking';

2.
	select k.nazwa,z.rodzaj,k.dataUr from Mkreatura k, Mekwipunek e, Mzasob z where k.idKreatury=e.idKreatury and e.idZasobu=z.idZasobu and z.rodzaj='jedzenie' order by dataUr desc limit 5;
	
3.
	select concat(k1.nazwa,' - ',k2.nazwa) from Mkreatura k1, Mkreatura k2 where k1.idKreatury=k2.idKreatury+5;


Zad5
1.
	select k.rodzaj,avg(e.ilosc*z.waga) as srednia from Mkreatura k inner join Mekwipunek e inner join Mzasob z on k.idKreatury=e.idKreatury and e.idZasobu=z.idZasobu where k.rodzaj not in ('malpa','waz') group by k.rodzaj having sum(e.ilosc)<30;

2.

	**** z UNION ****
	select 'najmlodsza',a.maxData, b.nazwa, a.rodzaj from (select max(dataUr) maxData, rodzaj from Mkreatura group by rodzaj) a, (select nazwa, dataUr from Mkreatura) b where a.maxData = b.dataUr
	union
	select 'najstarsza',a.minData, b.nazwa, a.rodzaj from (select min(dataUr) minData, rodzaj from Mkreatura group by rodzaj) a, (select nazwa, dataUr from Mkreatura) b where a.minData = b.dataUr;

	**** krÃ³tka wersja ****
	select a.nazwa, a.rodzaj, a.dataUr from kreatura a, (SELECT min(dataUr) min, max(dataUr) max
	from kreatura group by rodzaj) b WHERE b.min = a.dataUr OR b.max=a.dataUr;








Lab07:
Zad1
1.
	-
	
2.
	SELECT k.nazwa, u.id_uczestnika FROM kreatura AS a
	LEFT JOIN uczestnicy AS u ON k.idKreatury=u.id_uczestnika
	WHERE u.id_uczestnika IS NULL;

3.
	SELECT w.nazwa, SUM(e.ilosc) 
	FROM kreatura as k, wyprawa as w, uczestnicy as u, ekwipunek as e 
	WHERE k.idKreatury=e.idKreatury AND k.idKreatury=u.id_uczestnika AND u.id_wyprawy=w.id_wyprawy 
	GROUP BY w.nazwa;

	
Zad2
1.
	SELECT w.nazwa,COUNT(u.id_uczestnika), GROUP_CONCAT(k.nazwa SEPARATOR '  ') 
	FROM wyprawa AS w, uczestnicy AS u, kreatura AS k
	WHERE w.id_wyprawy=u.id_wyprawy AND u.id_uczestnika=k.idKreatury
	GROUP BY w.nazwa;

2.
	SELECT et.idEtapu, s.nazwa, k.nazwa
	FROM etapy_wyprawy AS et, wyprawa AS w, sektor AS s, kreatura AS k
	WHERE et.idWyprawy = w.id_wyprawy AND et.sektor = s.id_sektora 
	AND w.kierownik=k.idKreatury
	ORDER BY w.data_rozpoczecia, et.kolejnosc;


Zad3
1.
	SELECT s.id_sektora, COUNT(et.idEtapu)  AS odwiedzony
	FROM sektor AS s LEFT JOIN etapy_wyprawy AS et
	ON et.sektor=s.id_sektora
	GROUP BY s.id_sektora;

2.
	SELECT k.nazwa, IF(COUNT(u.id_uczestnika)>0,"bral udzial w wyprawie","nie bral udzialu w wyprawie") 
	FROM kreatura AS k LEFT JOIN uczestnicy AS u 
	ON k.idKreatury=u.id_uczestnika 
	GROUP BY k.nazwa;


Zad4.
1.
	SELECT w.nazwa, SUM(LENGTH(e.dziennik)) AS dlugosc 
	FROM wyprawa AS w, etapy_wyprawy AS e 
	WHERE e.idWyprawy=w.id_wyprawy 
	GROUP BY w.nazwa 
	HAVING dlugosc<400;

2.
	SELECT w.nazwa, SUM(z.waga*e.ilosc)/COUNT(u.id_uczestnika) as srednia 
	FROM wyprawa as w, uczestnicy as u, zasob as z, ekwipunek as e 
	WHERE u.id_wyprawy=w.id_wyprawy AND e.idZasobu=z.idZasobu AND u.id_uczestnika=e.idKreatury 
	GROUP BY w.nazwa;


Zad5
1.
	SELECT k.nazwa, datediff(data_rozpoczecia, dataUR) AS "wiek w dniach"
FROM kreatura AS k, wyprawa AS w, etapy_wyprawy AS e, sektor AS s
where e.sektor=s.id_sektora 
AND e.sektor=7
;
	